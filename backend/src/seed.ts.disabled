import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Starting FacGame database seeding...');

  // ============================================
  // 1. SUBSCRIPTION PLANS
  // ============================================
  const plans = await Promise.all([
    prisma.subscriptionPlan.upsert({
      where: { id: 'quiz-only-plan' },
      update: {},
      create: {
        id: 'quiz-only-plan',
        name: 'Quiz uniquement',
        description: 'Acc√®s illimit√© aux quiz interactifs FacGame',
        type: 'QUIZ_ONLY',
        interval: 'yearly',
        priceCents: 30000, // 300 MRU par an
        currency: 'MRU',
        features: [
          'Acc√®s √† tous les quiz interactifs',
          'Syst√®me de gamification complet',
          'Modes Challenge et Examen',
          'Classement et badges',
          'Valable pendant 1 an'
        ],
        isActive: true
      }
    }),
    prisma.subscriptionPlan.upsert({
      where: { id: 'documents-only-plan' },
      update: {},
      create: {
        id: 'documents-only-plan',
        name: 'Documents uniquement',
        description: 'Acc√®s aux cours PDF',
        type: 'DOCUMENTS_ONLY',
        interval: 'yearly',
        priceCents: 20000, // 200 MRU par an
        currency: 'MRU',
        features: [
          'Acc√®s √† tous les documents PDF',
          'T√©l√©chargement des cours',
          'Valable pendant 1 an'
        ],
        isActive: true
      }
    }),
    prisma.subscriptionPlan.upsert({
      where: { id: 'full-access-plan' },
      update: {},
      create: {
        id: 'full-access-plan',
        name: 'Acc√®s complet',
        description: 'Acc√®s total : Quiz + Documents PDF',
        type: 'FULL_ACCESS',
        interval: 'yearly',
        priceCents: 40000, // 400 MRU par an
        currency: 'MRU',
        features: [
          'Tous les quiz interactifs',
          'Tous les documents PDF',
          'Syst√®me de gamification',
          'Modes Challenge et Examen',
          'Classement et badges',
          'Support prioritaire',
          'Valable pendant 1 an'
        ],
        isActive: true
      }
    })
  ]);

  console.log('‚úÖ Subscription plans created');

  // ============================================
  // 2. USERS
  // ============================================
  const adminPassword = await bcrypt.hash('admin123', 10);
  const admin = await prisma.user.upsert({
    where: { email: 'admin@facgame.ma' },
    update: {},
    create: {
      email: 'admin@facgame.ma',
      passwordHash: adminPassword,
      name: 'Administrateur FacGame',
      role: 'SUPERADMIN',
      semester: '1'
    }
  });

  const studentPassword = await bcrypt.hash('student123', 10);
  const student = await prisma.user.upsert({
    where: { email: 'student@facgame.ma' },
    update: {},
    create: {
      email: 'student@facgame.ma',
      passwordHash: studentPassword,
      name: 'Mohamed √âtudiant',
      role: 'STUDENT',
      semester: '1',
      xpTotal: 150,
      level: 'BOIS',
      consecutiveGoodAnswers: 0,
      legendQuestionsCompleted: 0
    }
  });

  console.log('‚úÖ Users created');

  // ============================================
  // 3. BADGES
  // ============================================
  const badges = await Promise.all([
    prisma.badge.upsert({
      where: { name: 'Niveau Bronze' },
      update: {},
      create: {
        name: 'Niveau Bronze',
        description: 'Atteindre le niveau Bronze (801+ XP)',
        requirement: 'REACH_BRONZE'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'Niveau Argent' },
      update: {},
      create: {
        name: 'Niveau Argent',
        description: 'Atteindre le niveau Argent (1601+ XP)',
        requirement: 'REACH_ARGENT'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'Niveau Or' },
      update: {},
      create: {
        name: 'Niveau Or',
        description: 'Atteindre le niveau Or (2801+ XP)',
        requirement: 'REACH_OR'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'Niveau Platinum' },
      update: {},
      create: {
        name: 'Niveau Platinum',
        description: 'Atteindre le niveau Platinum (4001+ XP)',
        requirement: 'REACH_PLATINUM'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'Niveau L√©gendaire' },
      update: {},
      create: {
        name: 'Niveau L√©gendaire',
        description: 'Atteindre le niveau L√©gendaire (5501+ XP)',
        requirement: 'REACH_LEGENDAIRE'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'Niveau Mondial' },
      update: {},
      create: {
        name: 'Niveau Mondial',
        description: 'Atteindre le niveau Mondial (9001+ XP)',
        requirement: 'REACH_MONDIAL'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'Ma√Ætre des L√©gendes' },
      update: {},
      create: {
        name: 'Ma√Ætre des L√©gendes',
        description: 'R√©ussir 100 questions l√©gendaires',
        requirement: 'COMPLETE_100_LEGEND_QCM'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'S√©rie de 5' },
      update: {},
      create: {
        name: 'S√©rie de 5',
        description: '5 bonnes r√©ponses cons√©cutives',
        requirement: 'STREAK_5_CORRECT'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'S√©rie de 10' },
      update: {},
      create: {
        name: 'S√©rie de 10',
        description: '10 bonnes r√©ponses cons√©cutives',
        requirement: 'STREAK_10_CORRECT'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'Challenge Parfait' },
      update: {},
      create: {
        name: 'Challenge Parfait',
        description: 'R√©ussir un challenge √† 100%',
        requirement: 'CHALLENGE_100_PERCENT'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'Premier Examen R√©ussi' },
      update: {},
      create: {
        name: 'Premier Examen R√©ussi',
        description: 'R√©ussir votre premier examen (note ‚â• 10/20)',
        requirement: 'FIRST_EXAM_PASSED'
      }
    }),
    prisma.badge.upsert({
      where: { name: 'Chapitre Parfait' },
      update: {},
      create: {
        name: 'Chapitre Parfait',
        description: 'Compl√©ter un chapitre avec 100% de r√©ussite',
        requirement: 'PERFECT_CHAPTER'
      }
    })
  ]);

  console.log('‚úÖ Badges created');

  // ============================================
  // 4. SUBJECTS (Mati√®res m√©dicales)
  // ============================================
  const subjects = await Promise.all([
    prisma.subject.upsert({
      where: { id: 'subject-anatomie' },
      update: {},
      create: {
        id: 'subject-anatomie',
        title: 'Anatomie',
        description: '√âtude de la structure du corps humain : ost√©ologie, myologie, articulations et syst√®mes',
        semester: 'S1',
        tags: ['Anatomie', 'Ost√©ologie', 'Myologie', 'Articulations'],
        totalQCM: 600
      }
    }),
    prisma.subject.upsert({
      where: { id: 'subject-histologie' },
      update: {},
      create: {
        id: 'subject-histologie',
        title: 'Histologie',
        description: '√âtude des tissus du corps humain au niveau microscopique',
        semester: 'S1',
        tags: ['Histologie', 'Tissus', 'Cellules', 'Microscopie'],
        totalQCM: 600
      }
    }),
    prisma.subject.upsert({
      where: { id: 'subject-physiologie' },
      update: {},
      create: {
        id: 'subject-physiologie',
        title: 'Physiologie',
        description: '√âtude des fonctions vitales, syst√®mes et r√©gulations du corps humain',
        semester: 'S2',
        tags: ['Physiologie', 'Fonctions vitales', 'Hom√©ostasie', 'R√©gulation'],
        totalQCM: 600
      }
    })
  ]);

  console.log('‚úÖ Subjects created');

  // ============================================
  // 5. CHAPTERS (Chapitres dans chaque mati√®re)
  // ============================================

  // Chapitres Anatomie
  const anatomieChapters = await Promise.all([
    prisma.chapter.upsert({
      where: { id: 'chapter-anatomie-1' },
      update: {},
      create: {
        id: 'chapter-anatomie-1',
        subjectId: subjects[0].id,
        title: 'Ost√©ologie du cr√¢ne',
        description: '√âtude des os du cr√¢ne et leurs articulations',
        orderIndex: 1,
        pdfUrl: 'https://example.com/anatomie-crane.pdf'
      }
    }),
    prisma.chapter.upsert({
      where: { id: 'chapter-anatomie-2' },
      update: {},
      create: {
        id: 'chapter-anatomie-2',
        subjectId: subjects[0].id,
        title: 'Myologie du membre sup√©rieur',
        description: 'Muscles du membre sup√©rieur : origine, insertion, action',
        orderIndex: 2,
        pdfUrl: 'https://example.com/anatomie-membre-sup.pdf'
      }
    }),
    prisma.chapter.upsert({
      where: { id: 'chapter-anatomie-3' },
      update: {},
      create: {
        id: 'chapter-anatomie-3',
        subjectId: subjects[0].id,
        title: 'Syst√®me cardiovasculaire',
        description: 'Anatomie du c≈ìur et des vaisseaux sanguins',
        orderIndex: 3
      }
    })
  ]);

  // Chapitres Histologie
  const histologieChapters = await Promise.all([
    prisma.chapter.upsert({
      where: { id: 'chapter-histologie-1' },
      update: {},
      create: {
        id: 'chapter-histologie-1',
        subjectId: subjects[1].id,
        title: 'Tissus √©pith√©liaux',
        description: 'Classification et caract√©ristiques des √©pith√©liums',
        orderIndex: 1,
        pdfUrl: 'https://example.com/histologie-epithelium.pdf'
      }
    }),
    prisma.chapter.upsert({
      where: { id: 'chapter-histologie-2' },
      update: {},
      create: {
        id: 'chapter-histologie-2',
        subjectId: subjects[1].id,
        title: 'Tissus conjonctifs',
        description: '√âtude des tissus conjonctifs et leurs composants',
        orderIndex: 2
      }
    })
  ]);

  // Chapitres Physiologie
  const physiologieChapters = await Promise.all([
    prisma.chapter.upsert({
      where: { id: 'chapter-physiologie-1' },
      update: {},
      create: {
        id: 'chapter-physiologie-1',
        subjectId: subjects[2].id,
        title: 'Physiologie cardiaque',
        description: 'Fonctionnement du c≈ìur et r√©gulation cardiovasculaire',
        orderIndex: 1,
        pdfUrl: 'https://example.com/physio-cardiaque.pdf'
      }
    })
  ]);

  console.log('‚úÖ Chapters created');

  // ============================================
  // 6. QUESTIONS (Exemples de QCM)
  // ============================================

  // Questions Anatomie - Chapitre 1 (Ost√©ologie du cr√¢ne)
  await Promise.all([
    prisma.question.create({
      data: {
        chapterId: anatomieChapters[0].id,
        questionText: 'Combien d\'os composent le cr√¢ne humain adulte ?',
        options: ['18 os', '22 os', '26 os', '30 os'],
        correctAnswer: 1, // 22 os
        explanation: 'Le cr√¢ne humain adulte est compos√© de 22 os : 8 os du neurocr√¢ne et 14 os de la face.',
        difficulty: 'FACILE',
        orderIndex: 1
      }
    }),
    prisma.question.create({
      data: {
        chapterId: anatomieChapters[0].id,
        questionText: 'Quel os forme la partie post√©rieure et inf√©rieure du cr√¢ne ?',
        options: ['L\'os frontal', 'L\'os pari√©tal', 'L\'os occipital', 'L\'os temporal'],
        correctAnswer: 2, // L'os occipital
        explanation: 'L\'os occipital forme la partie post√©ro-inf√©rieure du cr√¢ne et contient le foramen magnum.',
        difficulty: 'FACILE',
        orderIndex: 2
      }
    }),
    prisma.question.create({
      data: {
        chapterId: anatomieChapters[0].id,
        questionText: 'Quelle suture s√©pare l\'os frontal des os pari√©taux ?',
        options: ['Suture coronale', 'Suture sagittale', 'Suture lambdo√Øde', 'Suture squameuse'],
        correctAnswer: 0, // Suture coronale
        explanation: 'La suture coronale s√©pare l\'os frontal des deux os pari√©taux.',
        difficulty: 'MOYEN',
        orderIndex: 3
      }
    }),
    prisma.question.create({
      data: {
        chapterId: anatomieChapters[0].id,
        questionText: 'Le processus masto√Øde fait partie de quel os ?',
        options: ['Os occipital', 'Os temporal', 'Os sph√©no√Øde', 'Os ethmo√Øde'],
        correctAnswer: 1, // Os temporal
        explanation: 'Le processus masto√Øde est une saillie de l\'os temporal, situ√©e en arri√®re de l\'oreille.',
        difficulty: 'MOYEN',
        orderIndex: 4
      }
    }),
    prisma.question.create({
      data: {
        chapterId: anatomieChapters[0].id,
        questionText: 'Quels sont les trois types de cellules pr√©sentes dans la lame cribl√©e de l\'ethmo√Øde ?',
        options: [
          'Cellules olfactives, cellules de soutien, cellules basales',
          'Cellules ant√©rieures, moyennes et post√©rieures',
          'Cellules ethmo√Ødales, sph√©no√Ødales et frontales',
          'Cellules neuros√©cr√©toires, gliales et √©pith√©liales'
        ],
        correctAnswer: 1, // Cellules ant√©rieures, moyennes et post√©rieures
        explanation: 'Les cellules ethmo√Ødales sont class√©es en trois groupes : ant√©rieures, moyennes et post√©rieures selon leur position.',
        difficulty: 'DIFFICILE',
        orderIndex: 5
      }
    }),
    prisma.question.create({
      data: {
        chapterId: anatomieChapters[0].id,
        questionText: 'D√©crivez le trajet complet du nerf trijumeau (V) depuis le tronc c√©r√©bral jusqu\'√† ses trois branches terminales, en pr√©cisant les foramens osseux travers√©s.',
        options: [
          'Sort par foramen ovale (V1), foramen rond (V2), fissure orbitaire sup√©rieure (V3)',
          'Sort par fissure orbitaire sup√©rieure (V1), foramen rond (V2), foramen ovale (V3)',
          'Sort par foramen magnum puis se divise en trois branches cr√¢niennes',
          'Traverse le canal du nerf hypoglosse puis √©merge par trois foramens diff√©rents'
        ],
        correctAnswer: 1,
        explanation: 'Le nerf trijumeau se divise en trois branches : V1 (ophtalmique) par la fissure orbitaire sup√©rieure, V2 (maxillaire) par le foramen rond, et V3 (mandibulaire) par le foramen ovale.',
        difficulty: 'LEGENDE',
        orderIndex: 6
      }
    })
  ]);

  // Questions Histologie - Chapitre 1 (Tissus √©pith√©liaux)
  await Promise.all([
    prisma.question.create({
      data: {
        chapterId: histologieChapters[0].id,
        questionText: 'Quelle est la caract√©ristique principale d\'un √©pith√©lium ?',
        options: [
          'Pr√©sence de vaisseaux sanguins',
          'Cellules jointives avec peu de matrice extracellulaire',
          'Abondance de fibres de collag√®ne',
          'Cellules espac√©es dans une matrice abondante'
        ],
        correctAnswer: 1,
        explanation: 'Les √©pith√©liums sont caract√©ris√©s par des cellules jointives (peu d\'espace intercellulaire) et une matrice extracellulaire r√©duite.',
        difficulty: 'FACILE',
        orderIndex: 1
      }
    }),
    prisma.question.create({
      data: {
        chapterId: histologieChapters[0].id,
        questionText: 'Quel type d\'√©pith√©lium tapisse la vessie ?',
        options: [
          '√âpith√©lium simple cubique',
          '√âpith√©lium stratifi√© squameux',
          '√âpith√©lium de transition (uroth√©lium)',
          '√âpith√©lium pseudostratifi√©'
        ],
        correctAnswer: 2,
        explanation: 'La vessie est tapiss√©e par un √©pith√©lium de transition (uroth√©lium) qui peut s\'√©tirer lors du remplissage v√©sical.',
        difficulty: 'MOYEN',
        orderIndex: 2
      }
    })
  ]);

  // Questions Physiologie - Chapitre 1 (Physiologie cardiaque)
  await Promise.all([
    prisma.question.create({
      data: {
        chapterId: physiologieChapters[0].id,
        questionText: 'Quelle est la fr√©quence cardiaque normale au repos chez un adulte ?',
        options: ['40-60 bpm', '60-100 bpm', '100-120 bpm', '120-140 bpm'],
        correctAnswer: 1,
        explanation: 'La fr√©quence cardiaque normale au repos chez un adulte se situe entre 60 et 100 battements par minute.',
        difficulty: 'FACILE',
        orderIndex: 1
      }
    }),
    prisma.question.create({
      data: {
        chapterId: physiologieChapters[0].id,
        questionText: 'Quel est le pacemaker naturel du c≈ìur ?',
        options: [
          'N≈ìud auriculo-ventriculaire (NAV)',
          'Faisceau de His',
          'N≈ìud sinusal (NS)',
          'Fibres de Purkinje'
        ],
        correctAnswer: 2,
        explanation: 'Le n≈ìud sinusal (ou n≈ìud sino-atrial) est le pacemaker naturel du c≈ìur, situ√© dans l\'oreillette droite.',
        difficulty: 'MOYEN',
        orderIndex: 2
      }
    })
  ]);

  console.log('‚úÖ Sample questions created');

  // ============================================
  // 7. TEST SUBSCRIPTION
  // ============================================
  await prisma.subscription.upsert({
    where: { id: 'sub-student-1' },
    update: {},
    create: {
      id: 'sub-student-1',
      userId: student.id,
      planId: plans[2].id, // Full access
      status: 'ACTIVE',
      startAt: new Date(),
      endAt: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000) // 1 year
    }
  });

  console.log('‚úÖ Test subscription created');

  // ============================================
  // SUMMARY
  // ============================================
  console.log('\nüéâ FacGame database seeding completed successfully!\n');
  console.log('üìã Test accounts:');
  console.log('   Admin: admin@facgame.ma / admin123');
  console.log('   Student: student@facgame.ma / student123\n');
  console.log('üìä Data created:');
  console.log(`   - ${plans.length} subscription plans`);
  console.log(`   - ${badges.length} badges`);
  console.log(`   - ${subjects.length} subjects (mati√®res)`);
  console.log(`   - ${anatomieChapters.length + histologieChapters.length + physiologieChapters.length} chapters`);
  console.log('   - 10 sample questions (QCM)\n');
}

main()
  .catch((e) => {
    console.error('‚ùå Error during seeding:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
