const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function diagnoseAnatomie() {
  try {
    console.log('üîç Diagnostic Anatomie PCEM2...\n');

    const anatomieSubject = await prisma.subject.findFirst({
      where: {
        title: { contains: 'Anatomie', mode: 'insensitive' },
        semester: 'PCEM2'
      },
      include: {
        chapters: {
          orderBy: { title: 'asc' },
          include: {
            _count: { select: { questions: true } }
          }
        }
      }
    });

    if (!anatomieSubject) {
      console.log('‚ùå Anatomie PCEM2 non trouv√©');
      return;
    }

    console.log(`üìö Sujet: ${anatomieSubject.title}`);
    console.log(`üìä totalQCM: ${anatomieSubject.totalQCM}`);
    console.log(`üìñ Nombre de chapitres: ${anatomieSubject.chapters.length}`);
    console.log('\nüìã Liste des chapitres:\n');

    let totalQuestions = 0;
    anatomieSubject.chapters.forEach((ch, index) => {
      const qCount = ch._count.questions;
      totalQuestions += qCount;
      console.log(`${(index + 1).toString().padStart(2, ' ')}. [${qCount.toString().padStart(3, ' ')} Q] ${ch.title}`);
    });

    console.log('\n' + '='.repeat(60));
    console.log(`üìä TOTAL: ${anatomieSubject.chapters.length} chapitres, ${totalQuestions} questions`);
    console.log(`üìä totalQCM dans BDD: ${anatomieSubject.totalQCM}`);
    console.log('='.repeat(60));

    // V√©rifier les chapitres manquants attendus
    const expectedChapters = [
      'OST√âOLOGIE DU CR√ÇNE',
      'APPAREIL MANDUCATEUR',
      'LES MUSCLES DE LA T√äTE',
      'LES VAISSEAUX DE LA T√ä',
      'LES LYMPHATIQUES DE LA',
      'APPAREIL DE VISION',
      'LES FOSSES NASALES',
      'OREILLE',
      'PHARYNX ET LARYNX',
      'THYRO√èDE ET LARYNX SU',
      'LES VOIES NERVEUSES',
      'EMBRYOLOGIE DU SYST√àM'
    ];

    console.log('\nüîç V√©rification chapitres QCM (1-12):\n');
    expectedChapters.forEach((expected, i) => {
      const found = anatomieSubject.chapters.some(ch => ch.title.includes(expected.substring(0, 15)));
      console.log(`${found ? '‚úÖ' : '‚ùå'} Chapitre ${i + 1}: ${expected}`);
    });

    // Compter les questions par type
    const allQuestions = await prisma.question.findMany({
      where: {
        chapter: {
          subjectId: anatomieSubject.id
        }
      },
      include: {
        chapter: {
          select: { title: true }
        }
      }
    });

    console.log(`\nüìä Total questions dans la BDD: ${allQuestions.length}`);

    await prisma.$disconnect();
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
    await prisma.$disconnect();
  }
}

diagnoseAnatomie();
